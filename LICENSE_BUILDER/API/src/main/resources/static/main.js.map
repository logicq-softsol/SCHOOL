{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/logicqInterceptor.ts","webpack:///./src/app/core/material.module.ts","webpack:///./src/app/core/token.storage.ts","webpack:///./src/app/public/license/change-date-dialog.html","webpack:///./src/app/public/license/license.component.ts","webpack:///./src/app/public/license/license.html","webpack:///./src/app/public/license/license.scss","webpack:///./src/app/public/login/login.component.html","webpack:///./src/app/public/login/login.component.scss","webpack:///./src/app/public/login/login.component.ts","webpack:///./src/app/public/model/license.ts","webpack:///./src/app/public/model/login-detail.ts","webpack:///./src/app/public/model/user-detail.ts","webpack:///./src/app/public/register/register.component.html","webpack:///./src/app/public/register/register.component.scss","webpack:///./src/app/public/register/register.component.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\nimport { LoginComponent } from './public/login/login.component';\r\nimport { RegisterComponent } from './public/register/register.component';\r\nimport { LicenseComponent } from 'src/app/public/license/license.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', canActivate: [AuthGuardService], component: RegisterComponent },\r\n  { path: 'licenselist', canActivate: [AuthGuardService], component: LicenseComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'license';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './public/login/login.component';\r\nimport { RegisterComponent } from './public/register/register.component';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { LogicQIntercept } from './core/logicqInterceptor';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CustomMaterialModule } from './core/material.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TokenStorage } from './core/token.storage';\r\nimport { LicenseComponent, DateChangeDialog } from './public/license/license.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    LicenseComponent,\r\n    DateChangeDialog\r\n  ],\r\n  entryComponents: [DateChangeDialog],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    CustomMaterialModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: LogicQIntercept,\r\n    multi: true\r\n  }, TokenStorage],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject, Injectable } from \"@angular/core\";\r\nimport {HttpEvent,HttpInterceptor,HttpHandler,HttpRequest,HttpResponse} from \"@angular/common/http\";\r\nimport { Observable, ReplaySubject, BehaviorSubject } from \"rxjs\";\r\nimport { catchError, tap, map, finalize } from \"rxjs/operators\";\r\nimport { MatSnackBar } from \"@angular/material\";\r\nimport { TokenStorage } from \"./token.storage\";\r\n\r\nconst TOKEN_HEADER_KEY = \"Authorization\";\r\n\r\n@Injectable()\r\nexport class LogicQIntercept implements HttpInterceptor {\r\n  constructor(\r\n    public snackBar: MatSnackBar,\r\n    private tokenStorage: TokenStorage\r\n  ) { }\r\n\r\n  // intercept request and add token\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    let authReq = request;\r\n    if (this.tokenStorage.getToken() != null) {\r\n      authReq = request.clone({\r\n        headers: request.headers.set(\r\n          TOKEN_HEADER_KEY,\r\n          \"Bearer \" + this.tokenStorage.getToken()\r\n        )\r\n      });\r\n    }\r\n    return next.handle(authReq).pipe(\r\n      tap(\r\n        event => {\r\n          if (event instanceof HttpResponse) {\r\n            console.log(\"API return\", event);\r\n\r\n          }\r\n        },\r\n        (err: any) => {\r\n          console.log(event);\r\n          this.openErrorSnackBar(err.message, \"CLOSE\");\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n\r\n  openErrorSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 10000\r\n    });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n\r\n\r\nimport {\r\n  MatButtonModule, MatCardModule,MatRadioModule, MatDialogModule, MatInputModule, MatTableModule,MatStepperModule,\r\n  MatToolbarModule,MatTabsModule,MatExpansionModule,MatCheckboxModule,MatMenuModule,MatListModule,MatGridListModule,\r\n  MatButtonToggleModule,MatSlideToggleModule,MatFormFieldModule,MatSelectModule,MatSliderModule,MatDatepickerModule,\r\n  MatProgressSpinnerModule,MatProgressBarModule,MatChipsModule,MatSidenavModule,MatBadgeModule,MatTooltipModule,\r\n  MatSnackBarModule,MatAutocompleteModule,MatPaginatorModule,MatSortModule,MatNativeDateModule,MatBottomSheetModule\r\n} from '@angular/material';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatToolbarModule, MatRadioModule,MatButtonModule, MatCardModule, MatInputModule, MatDialogModule, MatTableModule,MatTabsModule,MatExpansionModule,MatIconModule,MatCheckboxModule,MatMenuModule,MatGridListModule,MatListModule,MatButtonToggleModule,MatStepperModule,MatSlideToggleModule,MatFormFieldModule,MatSelectModule,MatSliderModule,MatDatepickerModule,MatProgressSpinnerModule,MatProgressBarModule,MatChipsModule,MatSidenavModule,MatBadgeModule,MatTooltipModule,MatSnackBarModule,MatAutocompleteModule,MatPaginatorModule,MatSortModule,MatDatepickerModule,MatNativeDateModule,MatBottomSheetModule],\r\n  exports: [CommonModule, MatToolbarModule,MatRadioModule, MatButtonModule, MatCardModule, MatInputModule, MatDialogModule, MatTableModule,MatTabsModule,MatExpansionModule,MatIconModule,MatCheckboxModule,MatMenuModule,MatGridListModule,MatListModule,MatButtonToggleModule,MatStepperModule,MatSlideToggleModule,MatFormFieldModule,MatSelectModule,MatSliderModule,MatDatepickerModule,MatProgressSpinnerModule,MatProgressBarModule,MatChipsModule,MatSidenavModule,MatBadgeModule,MatTooltipModule,MatSnackBarModule,MatAutocompleteModule,MatPaginatorModule,MatSortModule,MatDatepickerModule,MatNativeDateModule,MatBottomSheetModule],\r\n})\r\nexport class CustomMaterialModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n\r\nconst TOKEN_KEY = 'AuthToken';\r\n\r\n@Injectable()\r\nexport class TokenStorage {\r\n\r\n  constructor() { }\r\n\r\n  signOut() {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string) {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY,  token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"wh-bg\\\">\\r\\n    <h2 class=\\\"modal-header\\\">Change License Expiry Date for {{license.hostName}}</h2>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 col-sm-6\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\r\\n                <mat-label>License Extended Days</mat-label>\\r\\n                <input matInput placeholder=\\\" Extended Days\\\" [(ngModel)]=\\\"days\\\" name=\\\"days\\\" required>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 col-sm-6\\\">\\r\\n            <div class=\\\"col-md-10 col-sm-10\\\">\\r\\n                <mat-label>Current Days : <b>{{license.validityDay}}</b></mat-label>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-11 col-sm-12\\\">\\r\\n                <mat-label>Activation Day : <b>{{license.activationDate | date }}</b></mat-label>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-10 col-sm-12\\\">\\r\\n                <mat-label>Current Status : <b>{{license.status}}</b></mat-label>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button mat-raised-button color=\\\"warn\\\" (click)='confirmDays()'>CONFIRM</button>\\r\\n        <button mat-raised-button (click)='onNoClick()'> NO THANKS</button>\\r\\n    </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit, ViewChild, Inject, EventEmitter } from '@angular/core';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { MatSnackBar, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { MatPaginator, MatTableDataSource, MatSort } from '@angular/material';\r\nimport { License } from '../model/license';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './license.html',\r\n  styleUrls: ['./license.scss']\r\n})\r\nexport class LicenseComponent implements OnInit {\r\n  displayedColumns: string[] = ['hostName', 'activationDate', 'validityDay', 'download'];\r\n  licenseList: License[] = [];\r\n  dataSource = new MatTableDataSource<License>(this.licenseList);\r\n  today = new Date();\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private authService: AuthenticationService, public snackBar: MatSnackBar, private router: Router, private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    if (this.authService.isAuthenticate) {\r\n      this.authService.licensedList().subscribe((licList: License[]) => {\r\n        this.dataSource = new MatTableDataSource<License>(licList);\r\n        this.licenseList = licList;\r\n      });\r\n    }\r\n  }\r\n\r\n  editLicense(license: License) {\r\n    const dialogRef = this.dialog.open(DateChangeDialog, {\r\n      width: \"650px\",\r\n      data: license\r\n    });\r\n\r\n    dialogRef.componentInstance.numberofDays.subscribe((days: string) => {\r\n      this.authService.updateLicense(license,days).subscribe((data: any) => {\r\n        this.snackBar.open(license.hostName,\r\n          \"License Extended Sucessfully for more  \"+days+\"  days\" ,\r\n          {\r\n            duration: 5000\r\n          }\r\n        );\r\n\r\n      });\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  registerNewLicense() {\r\n    this.router.navigate(['/register']);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'change-date-dialog',\r\n  templateUrl: 'change-date-dialog.html',\r\n})\r\nexport class DateChangeDialog {\r\n  numberofDays = new EventEmitter();\r\n  license: License;\r\n  days: string;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DateChangeDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: License) {\r\n    this.license = data;\r\n\r\n  }\r\n\r\n  confirmDays() {\r\n    this.numberofDays.emit(this.days);\r\n    this.onNoClick();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<header class=\\\"container-fluid top-header d-flex align-items-center\\\">\\r\\n    <div class=\\\"w-100\\\">\\r\\n        <div class=\\\"row clearfix\\\">\\r\\n            <div class=\\\"col-lg-12\\\">\\r\\n                <a class=\\\"logo \\\" href=\\\"#\\\"><img src=\\\"assets/images/logo.png\\\" alt=\\\"\\\"></a>\\r\\n                <div class=\\\"search\\\">\\r\\n                    <i class=\\\"fas fa-search\\\"></i> <input type=\\\"text\\\" placeholder=\\\"Search...\\\" />\\r\\n                </div>\\r\\n                <ul class=\\\"login-info\\\">\\r\\n                    <li>Last login {{ today | date }}</li>\\r\\n                    <li><a class=\\\"user\\\" href=\\\"#\\\"><i class=\\\"material-icons\\\">account_circle</i></a></li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</header>\\r\\n<div class=\\\"body-content\\\">\\r\\n    <div class=\\\"content-area\\\">\\r\\n        <div class=\\\"primary-action mb-3\\\">\\r\\n            <div class=\\\"row clearfix\\\">\\r\\n                <div class=\\\"col-md-5 col-lg-6 text-right pull-right\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" mat-raised-button (click)=\\\"registerNewLicense()\\\">\\r\\n                        Register License</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" mat-raised-button (click)=\\\"decativateLicense()\\\">Deactivate\\r\\n                        License</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <mat-card>\\r\\n            <mat-card-header>\\r\\n                <mat-card-title> License List</mat-card-title>\\r\\n            </mat-card-header>\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n            </mat-form-field>\\r\\n            <div class=\\\"mat-elevation-z8\\\">\\r\\n                <table mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"activationDate\\\" matSortDisableClear\\r\\n                    matSortDirection=\\\"desc\\\">\\r\\n\\r\\n                    <!-- Position Column -->\\r\\n                    <ng-container matColumnDef=\\\"hostName\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Host Name </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.hostName}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Name Column -->\\r\\n                    <ng-container matColumnDef=\\\"activationDate\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Activated </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.activationDate | date:'fullDate'}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Weight Column -->\\r\\n                    <ng-container matColumnDef=\\\"validityDay\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Validity Days </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.validityDay}} </td>\\r\\n                    </ng-container>\\r\\n                    <!-- Weight Column -->\\r\\n                    <ng-container matColumnDef=\\\"download\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Download </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <mat-icon (click)=\\\"editLicense(element)\\\"><i class=\\\"material-icons\\\">edit</i></mat-icon>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n\\r\\n                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n            </div>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.example-container > * {\\n  width: 100%; }\\n\\ntable {\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.body-content {\\n  margin-left: 30px;\\n  margin-right: 30px;\\n  margin-top: 20px; }\\n\\n.btn {\\n  margin-left: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHVibGljL2xpY2Vuc2UvRTpcXFdPUktfU1BBQ0VcXFNDSE9PTF9DT05URU5UXFxTQ0hPT0xcXExJQ0VOU0VfQlVJTERFUlxcV0VCL3NyY1xcYXBwXFxwdWJsaWNcXGxpY2Vuc2VcXGxpY2Vuc2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQWE7RUFDYixzQkFBc0IsRUFBQTs7QUFHeEI7RUFDRSxXQUFXLEVBQUE7O0FBRWI7RUFDRSxXQUFXLEVBQUE7O0FBR2Y7RUFDSSxXQUFXLEVBQUE7O0FBRWY7RUFDSSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFdBQVcsRUFBQTs7QUFFYjtFQUNFLGlCQUFnQjtFQUNoQixrQkFBaUI7RUFDakIsZ0JBQWUsRUFBQTs7QUFFakI7RUFDRSxpQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3B1YmxpYy9saWNlbnNlL2xpY2Vuc2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcbiAgXHJcbiAgLmV4YW1wbGUtY29udGFpbmVyID4gKiB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgdGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuLmV4YW1wbGUtZnVsbC13aWR0aCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuLmV4YW1wbGUtZm9ybSB7XHJcbiAgICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICAuYm9keS1jb250ZW50e1xyXG4gICAgbWFyZ2luLWxlZnQ6MzBweDtcclxuICAgIG1hcmdpbi1yaWdodDozMHB4O1xyXG4gICAgbWFyZ2luLXRvcDoyMHB4O1xyXG4gIH1cclxuICAuYnRue1xyXG4gICAgbWFyZ2luLWxlZnQ6MjBweDtcclxuICB9Il19 */\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Login</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <form class=\\\"example-form\\\">\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\r\\n      <mat-label>Username</mat-label>\\r\\n      <input matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\r\\n      <mat-label>Password</mat-label>\\r\\n      <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\r\\n    </mat-form-field>\\r\\n    <mat-card-actions>\\r\\n      <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">Login</button>\\r\\n    </mat-card-actions>\\r\\n  </form>\\r\\n</mat-card>\"","module.exports = \".example-icon {\\n  padding: 0 14px; }\\n\\n.example-spacer {\\n  flex: 1 1 auto; }\\n\\n.example-card {\\n  width: 400px;\\n  margin: 10% auto; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHVibGljL2xvZ2luL0U6XFxXT1JLX1NQQUNFXFxTQ0hPT0xfQ09OVEVOVFxcU0NIT09MXFxMSUNFTlNFX0JVSUxERVJcXFdFQi9zcmNcXGFwcFxccHVibGljXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFlLEVBQUE7O0FBR2pCO0VBQ0UsY0FBYyxFQUFBOztBQUVoQjtFQUNFLFlBQVk7RUFDWixnQkFBZ0IsRUFBQTs7QUFFcEI7RUFDSSxXQUFXLEVBQUE7O0FBRWY7RUFDSSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3B1YmxpYy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWljb24ge1xyXG4gICAgcGFkZGluZzogMCAxNHB4O1xyXG4gIH1cclxuICBcclxuICAuZXhhbXBsZS1zcGFjZXIge1xyXG4gICAgZmxleDogMSAxIGF1dG87XHJcbiAgfVxyXG4gIC5leGFtcGxlLWNhcmQge1xyXG4gICAgd2lkdGg6IDQwMHB4O1xyXG4gICAgbWFyZ2luOiAxMCUgYXV0bztcclxuICB9XHJcbi5leGFtcGxlLWZ1bGwtd2lkdGgge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbi5leGFtcGxlLWZvcm0ge1xyXG4gICAgbWluLXdpZHRoOiAxNTBweDtcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { TokenStorage } from 'src/app/core/token.storage';\r\nimport { Router } from '@angular/router';\r\nimport { LoginDetail } from '../model/login-detail';\r\nimport { UserDetail } from '../model/user-detail';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(private authService: AuthenticationService, private storage: TokenStorage, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n   \r\n  }\r\n\r\n  login() {\r\n    let loginDetail: LoginDetail = new LoginDetail();\r\n    loginDetail.userName = this.username;\r\n    loginDetail.password = this.password;\r\n    this.authService.login(loginDetail).subscribe((res: any) => {\r\n      this.storage.saveToken(res.message);\r\n      this.authService.authenticationState.next(true);\r\n      if (this.authService.isAuthenticate) {\r\n        this.authService.loadUser().subscribe((user: UserDetail) => {\r\n          this.authService.changeUserDetail(user);\r\n          this.router.navigate(['/licenselist']);\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  logout() {\r\n    let loginDetail: LoginDetail = new LoginDetail();\r\n    this.authService.logout();\r\n    this.storage.signOut();\r\n    this.authService.authenticationState.next(false);\r\n    if (this.authService.isAuthenticate) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n}\r\n","export class License {\r\n    public hostName: string;\r\n    public entityName: string;\r\n    public contactNumber: string;\r\n    public contactEmail: string;\r\n    public address: string;\r\n    public city: string;\r\n    public state: string;\r\n    public country: string;\r\n    public postalCode: string;\r\n    public validityDay: number;\r\n    public activationDate: Date;\r\n    public status: string;\r\n    public createdBy: string;\r\n    public creationTime: Date;\r\n    public productName:string;\r\n}\r\n","import { UserDetail } from './user-detail';\r\n\r\nexport class LoginDetail {\r\n    public userName: string;\r\n    public password: string;\r\n    public user: UserDetail;\r\n}","export class UserDetail {\r\n    public firstname: string;\r\n    public lastname: string;\r\n    public address: string; \r\n    public city: string;\r\n    public country: string;\r\n    public state: string;\r\n    public postalcode: string; \r\n    public mobileno: string;\r\n    public email: string;\r\n    public role: string;\r\n    public profileImage:string;\r\n}","module.exports = \"<header class=\\\"container-fluid top-header d-flex align-items-center\\\">\\r\\n    <div class=\\\"w-100\\\">\\r\\n        <div class=\\\"row clearfix\\\">\\r\\n            <div class=\\\"col-lg-12\\\">\\r\\n                <a class=\\\"logo \\\" href=\\\"#\\\"><img src=\\\"assets/images/logo.png\\\" alt=\\\"\\\"></a>\\r\\n                <div class=\\\"search\\\">\\r\\n                    <i class=\\\"fas fa-search\\\"></i> <input type=\\\"text\\\" placeholder=\\\"Search...\\\" />\\r\\n                </div>\\r\\n                <ul class=\\\"login-info\\\">\\r\\n                    <li>Last login {{ today | date }}</li>\\r\\n                    <li><a class=\\\"user\\\" href=\\\"#\\\"><i class=\\\"material-icons\\\">account_circle</i></a></li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</header>\\r\\n<div class=\\\"row\\\">\\r\\n    <mat-toolbar>Setup new License</mat-toolbar>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <mat-card class=\\\"example-card\\\">\\r\\n            <mat-card-header>\\r\\n                <mat-card-title>License Details</mat-card-title>\\r\\n            </mat-card-header>\\r\\n            <mat-card-content>\\r\\n                <form class=\\\"example-form\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\r\\n                                <mat-label>Host Name</mat-label>\\r\\n                                <input matInput placeholder=\\\"HostName\\\" [(ngModel)]=\\\"licenseDetail.hostName\\\" name=\\\"hostName\\\"\\r\\n                                    required>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\r\\n                                <mat-label>School Name</mat-label>\\r\\n                                <input matInput placeholder=\\\"School Name\\\" [(ngModel)]=\\\"licenseDetail.entityName\\\" name=\\\"entityName\\\"\\r\\n                                    required>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\r\\n                                <input matInput [matDatepicker]=\\\"activation\\\" placeholder=\\\"Choose a date\\\" [(ngModel)]=\\\"licenseDetail.activationDate\\\"\\r\\n                                    name=\\\"activation\\\">\\r\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"activation\\\"></mat-datepicker-toggle>\\r\\n                                <mat-datepicker #activation></mat-datepicker>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\r\\n                                <mat-label>License Validity in Days</mat-label>\\r\\n                                <input matInput placeholder=\\\"License Validity in Days\\\" [(ngModel)]=\\\"licenseDetail.validityDay\\\"\\r\\n                                    name=\\\"validityDay\\\" required>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-10\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\r\\n                                <mat-label>Product Name</mat-label>\\r\\n                                <input matInput placeholder=\\\"Product Name\\\" [(ngModel)]=\\\"licenseDetail.productName\\\" name=\\\"productName\\\"\\r\\n                                    required>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <mat-card class=\\\"example-card\\\">\\r\\n            <mat-card-header>\\r\\n                <mat-card-title>Profile Details</mat-card-title>\\r\\n            </mat-card-header>\\r\\n            <mat-card-content>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\r\\n                            <mat-label>Contact Number</mat-label>\\r\\n                            <input matInput placeholder=\\\"Contact Number\\\" [(ngModel)]=\\\"licenseDetail.contactNumber\\\" name=\\\"contactNumber\\\"\\r\\n                                required>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\r\\n                            <mat-label>Contact Email</mat-label>\\r\\n                            <input matInput placeholder=\\\"Contact Email\\\" [(ngModel)]=\\\"licenseDetail.contactEmail\\\" name=\\\"contactEmail\\\"\\r\\n                                required>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                            <textarea matInput placeholder=\\\"Address\\\" [(ngModel)]=\\\"licenseDetail.address\\\" name=\\\"address\\\"></textarea>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\r\\n                            <mat-label>City</mat-label>\\r\\n                            <input matInput placeholder=\\\"City\\\" [(ngModel)]=\\\"licenseDetail.city\\\" name=\\\"city\\\" required>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\r\\n                            <mat-label>State</mat-label>\\r\\n                            <input matInput placeholder=\\\"State\\\" [(ngModel)]=\\\"licenseDetail.state\\\" name=\\\"state\\\" required>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\r\\n                            <mat-label>Country</mat-label>\\r\\n                            <input matInput placeholder=\\\"Country\\\" [(ngModel)]=\\\"licenseDetail.country\\\" name=\\\"country\\\"\\r\\n                                required>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\r\\n                            <mat-label>Postal Code</mat-label>\\r\\n                            <input matInput placeholder=\\\"Postal Code\\\" [(ngModel)]=\\\"licenseDetail.postalCode\\\" name=\\\"postalCode\\\"\\r\\n                                required>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-5 col-lg-6 text-right pull-right\\\">\\r\\n        <mat-card-actions>\\r\\n            <button mat-raised-button (click)=\\\"registerNewLicense()\\\" color=\\\"primary\\\">Build New License</button>\\r\\n        </mat-card-actions>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.example-container > * {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHVibGljL3JlZ2lzdGVyL0U6XFxXT1JLX1NQQUNFXFxTQ0hPT0xfQ09OVEVOVFxcU0NIT09MXFxMSUNFTlNFX0JVSUxERVJcXFdFQi9zcmNcXGFwcFxccHVibGljXFxyZWdpc3RlclxccmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFhO0VBQ2Isc0JBQXNCLEVBQUE7O0FBR3hCO0VBQ0UsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHVibGljL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIH1cclxuICBcclxuICAuZXhhbXBsZS1jb250YWluZXIgPiAqIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { UserDetail } from '../model/user-detail';\r\nimport { LoginDetail } from '../model/login-detail';\r\nimport { License } from '../model/license';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  user: UserDetail = new UserDetail();\r\n  login: LoginDetail = new LoginDetail();\r\n  licenseDetail: License = new License();\r\n\r\n  constructor(private authService: AuthenticationService, public snackBar: MatSnackBar, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n\r\n  registerNewLicense() {\r\n    this.authService.buildNewLicense(this.licenseDetail).subscribe((data: any) => {\r\n      if (data.messageCode == 'SUCESS') {\r\n        this.router.navigate(['/licenselist']);\r\n      }else{\r\n        this.openSnackBar(data.message,\"ERROR\");\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 10000\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService {\r\n\r\n  constructor(private authService: AuthenticationService) { }\r\n\r\n  canActivate(): boolean {\r\n    return this.authService.isAuthenticate();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { TokenStorage } from '../core/token.storage';\r\nimport { LoginDetail } from '../public/model/login-detail';\r\nimport { UserDetail } from '../public/model/user-detail';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { License } from 'src/app/public/model/license';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  authenticationState = new BehaviorSubject(false);\r\n  public userDetail = new ReplaySubject<UserDetail>(1);\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  \r\n  getUserDetail() {\r\n    return this.userDetail.asObservable();\r\n  }\r\n\r\n  public changeUserDetail(userDetail: UserDetail) {\r\n    this.userDetail.next(userDetail);\r\n  }\r\n\r\n\r\n  login(loginDetail: LoginDetail) {\r\n    let headers = new HttpHeaders();\r\n    headers.set('Content-Type', 'application/json');\r\n    headers.set('Access-Control-Allow-Origin', '*');\r\n    let httpOptions = { headers: headers };\r\n    return this.http.post(environment.baseUrl + 'api/login', loginDetail, httpOptions);\r\n  }\r\n\r\n  logout() {\r\n    this.authenticationState.next(false);\r\n  }\r\n\r\n  isAuthenticate() {\r\n    return this.authenticationState.value;\r\n  }\r\n\r\n  buildNewLicense(licensDetail: License) {\r\n    let headers = new HttpHeaders();\r\n    headers.set('Content-Type', 'application/json');\r\n    headers.set('Access-Control-Allow-Origin', '*');\r\n    let httpOptions = { headers: headers };\r\n    return this.http.post(environment.baseUrl + 'api/school/license', licensDetail, httpOptions);\r\n  }\r\n  \r\n  loadRole() {\r\n    return this.http.get('assets/data/role.json');\r\n  }\r\n\r\n  loadUser() {\r\n    return this.http.get(environment.baseUrl + 'api/load');\r\n  }\r\n\r\n  licensedList(){\r\n    return this.http.get(environment.baseUrl + 'api/school/license');\r\n  }\r\n\r\n  updateLicense( license:License,day:string){\r\n    let headers = new HttpHeaders();\r\n    headers.set('Content-Type', 'application/json');\r\n    headers.set('Access-Control-Allow-Origin', '*');\r\n    let httpOptions = { headers: headers };\r\n    return this.http.put(environment.baseUrl + 'api/school/license/extend/'+day,license, httpOptions);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n   baseUrl: 'http://127.0.0.1:8080/',\r\n // socketUrl: 'http://127.0.0.1:8080/license/socket'\r\n  //baseUrl: \"http://101.53.144.190:8080/license/\",\r\n  //socketUrl: \"http://101.53.144.190:8080/license/socket\"\r\n};\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}